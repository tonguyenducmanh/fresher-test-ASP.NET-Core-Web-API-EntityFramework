// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fresher_test_ASP.NET_Core_Web_API.Models;

#nullable disable

namespace fresher_test_ASP.NET_Core_Web_API.Migrations
{
    [DbContext(typeof(customerDatabaseContext))]
    partial class customerDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.customer", b =>
                {
                    b.Property<string>("_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("anh")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("doanhthu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dtcoquan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dtdidong")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("dungchung")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("emailcanhan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("emailcoquan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("hovadem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("linhvuc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("loaihinh")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("masothue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("mota")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("motainganhang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nganhnghe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ngaythanhlap")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nguongoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phongban")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phuongxa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("quanhuyen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("quocgia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sonha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("taikhoannganhang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ten")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tinhthanhpho")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tochuc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("xungho")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zalo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("_id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.filter", b =>
                {
                    b.Property<int>("filterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("filterId");

                    b.ToTable("filter");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.filterContent", b =>
                {
                    b.Property<int>("filterContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("chucdanhCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("chucdanhString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("doanhthuCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("doanhthuString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dtcoquanCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dtcoquanString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dtdidongCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dtdidongString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dungchungCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dungchungString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("emailcanhanCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("emailcanhanString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("emailcoquanCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("emailcoquanString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("filterId")
                        .HasColumnType("int");

                    b.Property<string>("hovademCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("hovademString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("linhvucCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("linhvucString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("loaihinhCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("loaihinhString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("loaitiemnangCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("loaitiemnangString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("masothueCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("masothueString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("motaCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("motaString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("motainganhangCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("motainganhangString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nganhngheCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nganhngheString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ngaythanhlapCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ngaythanhlapString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nguongocCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nguongocString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phongbanCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phongbanString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phuongxaCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phuongxaString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("quanhuyenCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("quanhuyenString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("quocgiaCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("quocgiaString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sonhaCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sonhaString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("taikhoannganhangCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("taikhoannganhangString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tenCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tenString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("theCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("theString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tinhthanhphoCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tinhthanhphoString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tochucCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tochucString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("xunghoCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("xunghoString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zaloCondition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zaloString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("filterContentId");

                    b.HasIndex("filterId")
                        .IsUnique();

                    b.ToTable("filterContent");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.history", b =>
                {
                    b.Property<string>("historyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("customerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("historyContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("historyId");

                    b.HasIndex("customerId");

                    b.ToTable("history");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.loaitiemnang", b =>
                {
                    b.Property<string>("loaitiemnangId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("customerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("loaitiemnangContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("loaitiemnangId");

                    b.HasIndex("customerId");

                    b.ToTable("loaitiemnang");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.the", b =>
                {
                    b.Property<string>("theId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("customerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("theContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("theId");

                    b.HasIndex("customerId");

                    b.ToTable("the");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.filterContent", b =>
                {
                    b.HasOne("fresher_test_ASP.NET_Core_Web_API.Models.filter", "filter")
                        .WithOne("filterContent")
                        .HasForeignKey("fresher_test_ASP.NET_Core_Web_API.Models.filterContent", "filterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("filter");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.history", b =>
                {
                    b.HasOne("fresher_test_ASP.NET_Core_Web_API.Models.customer", "customer")
                        .WithMany("history")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.loaitiemnang", b =>
                {
                    b.HasOne("fresher_test_ASP.NET_Core_Web_API.Models.customer", "customer")
                        .WithMany("loaitiemnang")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.the", b =>
                {
                    b.HasOne("fresher_test_ASP.NET_Core_Web_API.Models.customer", "customer")
                        .WithMany("the")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.customer", b =>
                {
                    b.Navigation("history");

                    b.Navigation("loaitiemnang");

                    b.Navigation("the");
                });

            modelBuilder.Entity("fresher_test_ASP.NET_Core_Web_API.Models.filter", b =>
                {
                    b.Navigation("filterContent")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
